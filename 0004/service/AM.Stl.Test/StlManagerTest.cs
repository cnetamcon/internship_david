using AM.Stl.Interfaces;
using AM.Stl.Models;
using Core.Extensions;
using Core.Settings.Interfaces;
using Core.Test;
using System;
using System.Text;

namespace AM.Stl.Test
{
    public class StlManagerTest : BaseTest
    {

        private int _colorLastIndex = 0;
        private ISubtitleColorSettingsManager _colorSettings;

        [SetUp]
        public void Setup()
        {
            _colorSettings = GetService<ISubtitleColorSettingsManager>();
        }

        [Test]
        public void Test1()
        {
            var manager = GetService<IStlManager>();

            var playlist = GeneratePlaylist();

            var playlistBytes = manager.Build(playlist);
            var referencePlaylistBytes = GetReferencePlaylist();


            for (int i = 0; i < playlistBytes.Length; i++)
            {
                if (playlistBytes[i] != referencePlaylistBytes[i])
                {
                    var start = i < 10 ? i : i - 10;
                    var count = i - start + 10;

                    var b1 = playlistBytes.Skip(start).Take(count).ToArray().Print();
                    var b2 = referencePlaylistBytes.Skip(start).Take(count).ToArray().Print();
                    Assert.IsTrue(false, $"Position: {i}\r\n{b1}\r\n{b2}");
                }
            }
        }

        private StlSubtitlePlaylistAModel GeneratePlaylist()
        {
            var result = new StlSubtitlePlaylistAModel()
            {
                Framerate = 25,
                Title = "test",
                Subtitles = new List<StlSubtitleAModel>()
            };

            var time = TimeSpan.FromSeconds(85);
            var subtitleDuration = TimeSpan.FromSeconds(3);

            for (int i = 0; i < 10; i++)
            {
                result.Subtitles.Add(new StlSubtitleAModel()
                {
                    StartTime = time,
                    FinishTime = time.Add(subtitleDuration),
                    Id = (short)(i + 1),
                    Lines = GenerateSubtitleLines(i),
                });

                time = time.Add(subtitleDuration)
                    .Add(TimeSpan.FromSeconds(2));
            }

            return result;
        }

        private List<StlSubtitleLineAModel> GenerateSubtitleLines(int currentPosition)
        {
            var count = currentPosition % 2 == 0 ? 1 : 2;

            var result = new List<StlSubtitleLineAModel>();

            for (int i = 0; i < count; i++)
            {
                var text = $"Test subtitle line {i + 1} from subtitle {currentPosition + 1}";
                result.Add(new StlSubtitleLineAModel()
                {
                    Number = (byte)(i + 1),
                    Color = GetNextColor(),
                    Text = Encoding.UTF8.GetBytes(text)
                });
            }

            return result;
        }

        private byte GetNextColor()
        {
            var colors = _colorSettings.Get().Pairs;

            if (_colorLastIndex + 1 >= colors.Count) _colorLastIndex = 0;

            return colors[_colorLastIndex++].ColorStl;
        }

        private byte[] GetReferencePlaylist()
        {
            var text = "38-35-30-53-54-4C-32-35-2E-30-31-31-30-30-30-46-74-65-73-74-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-32-33-30-33-30-31-32-33-30-33-30-31-20-20-30-30-30-31-30-30-30-30-31-35-30-30-31-35-30-32-33-31-30-30-30-30-30-30-30-30-30-30-30-31-32-35-30-30-31-31-46-52-41-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-20-00-01-00-FF-00-00-01-19-00-00-01-1C-00-14-02-00-0D-01-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-31-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-31-0A-0A-8A-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-00-02-00-FF-00-00-01-1E-00-00-01-21-00-14-02-00-0D-02-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-31-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-32-0A-0A-8A-0D-04-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-32-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-32-0A-0A-8A-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-00-03-00-FF-00-00-01-23-00-00-01-26-00-14-02-00-0D-07-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-31-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-33-0A-0A-8A-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-00-04-00-FF-00-00-01-28-00-00-01-2B-00-14-02-00-0D-00-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-31-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-34-0A-0A-8A-0D-03-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-32-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-34-0A-0A-8A-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-00-05-00-FF-00-00-01-2D-00-00-01-30-00-14-02-00-0D-05-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-31-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-35-0A-0A-8A-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-00-06-00-FF-00-00-01-32-00-00-01-35-00-14-02-00-0D-01-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-31-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-36-0A-0A-8A-0D-02-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-32-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-36-0A-0A-8A-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-00-07-00-FF-00-00-01-37-00-00-01-3A-00-14-02-00-0D-04-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-31-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-37-0A-0A-8A-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-00-08-00-FF-00-00-02-00-00-00-02-03-00-14-02-00-0D-07-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-31-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-38-0A-0A-8A-0D-00-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-32-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-38-0A-0A-8A-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-00-09-00-FF-00-00-02-05-00-00-02-08-00-14-02-00-0D-03-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-31-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-39-0A-0A-8A-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-00-0A-00-FF-00-00-02-0A-00-00-02-0D-00-14-02-00-0D-05-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-31-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-31-30-0A-0A-8A-0D-01-0B-0B-54-65-73-74-20-73-75-62-74-69-74-6C-65-20-6C-69-6E-65-20-32-20-66-72-6F-6D-20-73-75-62-74-69-74-6C-65-20-31-30-0A-0A-8A-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F-8F";
            var result = text.ToByteArray();

            return result;
        }
    }
}